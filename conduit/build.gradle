buildscript {
    ext {
        vertxVersion = "3.8.3"
    }
}

plugins {
    id 'io.vertx.vertx-plugin' version '1.0.1'

}

repositories {
    jcenter()
    mavenCentral()
}

vertx {
    mainVerticle = 'io.vertx.conduit.App'
    jvmArgs = ["-Dvertx.logger-delegate-factory-class-name=io.vertx.core.logging.Log4j2LogDelegateFactory"]
    debugSuspend = true
    debugPort = 5005
}

dependencies{
    compile group: 'io.vertx', name: 'vertx-config'
    compile group: 'io.vertx', name: 'vertx-web'
    compile group: 'io.vertx', name: 'vertx-mongo-client'
    compile group: 'io.vertx', name: 'vertx-auth-jwt'
    compile group: 'io.vertx', name: 'vertx-service-proxy'
    compile group: 'io.vertx', name: 'vertx-service-discovery'
    compile group: 'io.vertx', name: 'vertx-rx-java2'
    compile group: 'io.vertx', name: 'vertx-rx-java2-gen', version: vertxVersion
    compile group: 'io.vertx', name: 'vertx-web-client'
    compile group: 'com.github.slugify', name: 'slugify', version: '2.2'
    compile group: 'org.springframework.security', name: 'spring-security-crypto', version: '3.1.0.RELEASE'
    compile group: 'dev.morphia.morphia', name: 'core', version: '1.5.8'
    compile group: 'dev.morphia.morphia', name: 'validation', version: '1.5.8'
    compile group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
    compile group: 'org.hibernate', name: 'hibernate-validator', version: '6.1.0.Final'
    compile group: 'javax.el', name: 'javax.el-api', version: '3.0.0'
    compile group: 'org.glassfish', name: 'javax.el', version: '3.0.0'
    compileOnly group: 'io.vertx', name: 'vertx-codegen'
    compile project (':common')

    testCompile group: 'io.vertx', name:'vertx-unit'
    testCompile group: 'junit', name:'junit', version:'4.12'
}

def generated_dir = 'src/main/generated'

task cleanGenerate(type: Delete, group: 'build') {
    delete project.file(generated_dir)
}

task generate(type: JavaCompile, group: 'build') {
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.compileOnly
    destinationDir = project.file(generated_dir)
    options.annotationProcessorPath = configurations.compile + configurations.compileOnly
    options.compilerArgs = [
            "-proc:only",
            "-processor", "io.vertx.codegen.CodeGenProcessor"
    ]
}

sourceSets {
    main {
        java {
            srcDirs += generated_dir
        }
    }
    test {
        java {
            srcDirs 'test/java'
        }
    }
}

compileJava {
    targetCompatibility = 1.8
    sourceCompatibility = 1.8

    dependsOn generate
}